System prompt:
You are a helpful, respectful and honest network configuration assistant.
You provide extended named access control list scripts in Cisco IOS syntax to fulfill the requirements you're given.
You always provide the script as it would be found in a configuration file.
Make sure to use the syntax for *extended* and *named* access control lists.
Make sure to not include any remarks, comments or explanations inside the script. 
Make sure to not include any console navigation commands.
Make sure to give the access control list a representative, brief, alphanumeric name with no punctuation.
When asked to give only the solution code wrap it around triple ticks (```) without specifying any languages.

User prompt:
Please help me figure out the script for an extended named ACL that allows all traffic from network 192.168.255.32/28, and blocks all other traffic. First help me break down the previous description into all the individual requirements this ACL needs to fulfill

The model's response:
Based on your request, I've broken down the requirements into individual parts:

* Create an extended named ACL.
* Allow all traffic from network 192.168.255.32/28.
* Block all other traffic.

Let me know if this is correct, and I'll provide the script accordingly.

User prompt:
Now for each requirement identify which protocol, source ip addresses, source wildcard (if applicable), destination ip addresses, destination wildcard (if applicable), and ports (if applicable) are involved

The model's response:
Here's the breakdown of the requirements with the relevant protocol, source and destination IP addresses, and ports:

1. Create an extended named ACL:
	* No specific protocol, source IP, or port specified
2. Allow all traffic from network 192.168.255.32/28:
	* Protocol: Any (all protocols, including TCP, UDP, ICMP, etc.)
	* Source IP: 192.168.255.32/28
	* Destination IP: Any (no specific destination IP specified)
	* Destination Wildcard: Any (no specific destination IP specified)
	* No ports specified (allowing all ports)
3. Block all other traffic:
	* Protocol: Any (all protocols, including TCP, UDP, ICMP, etc.)
	* Source IP: Any (no specific source IP specified)
	* Destination IP: Any (no specific destination IP specified)
	* Destination Wildcard: Any (no specific destination IP specified)
	* No ports specified (blocking all ports)

Let me know when you're ready for me to create the ACL script!

User prompt:
Now give me the commands that would implement each of those requirements

The model's response:
Here are the commands to implement each requirement:

1. Create an extended named ACL:
```
ip access-list extended ACL_ALLOW_192_168_255_32
```
2. Allow all traffic from network 192.168.255.32/28:
```
permip host 192.168.255.32
```
   No ports or type is specified so it allows all types of packet and all port numbers from the source ip.
3. Block all other traffic:
```
deny ip any any
```

User prompt:
Now tell me the order the commands should be arranged into to fulfill the requirements properly

The model's response:
The commands should be arranged in the following order to fulfill the requirements properly:

```
ip access-list extended ACL_ALLOW_192_168_255_32
permit ip host 192.168.255.32 any
deny ip any any
```

User prompt:
Now give me the command that starts the list and gives it a name

The model's response:
```
ip access-list extended allow_192_168_255_32
```

User prompt:
Now put all the commands together to create the full ACL script

The model's response:
````
ip access-list extended allow_192_168_255_32
permit ip host 192.168.255.32 any
deny ip any any
```

User prompt:
Now please give me only the solution as only one code snippet so I can store it in a configuration file (without explanations or any other text)

The model's response:
```
```
ip access-list extended allow_192_168_255_32
permit ip host 192.168.255.32 any
deny ip any any
```
```

