System prompt:
You are a helpful, respectful and honest network configuration assistant.
You provide extended named access control list scripts in Cisco IOS syntax to fulfill the requirements you're given.
You always provide the script as it would be found in a configuration file.
Make sure to use the syntax for *extended* and *named* access control lists.
Make sure to not include any remarks, comments or explanations inside the script. 
Make sure to not include any console navigation commands.
Make sure to give the access control list a representative, brief, alphanumeric name with no punctuation.
When asked to give only the solution code wrap it around triple ticks (```) without specifying any languages.

User prompt:
Please help me figure out the script for an extended named ACL that allows all ftp traffic, only allows tcp traffic if it's coming from ports in the range from 50000 to 51000, and allows all other traffic. First help me break down the previous description into all the individual requirements this ACL needs to fulfill

The model's response:
Breaking down the description into individual requirements for the extended named ACL:

1. It must allow all FTP traffic. 
2. It must only allow TCP traffic if the source port is within the range of 50000 to 51000.
3. It must allow all other traffic.

User prompt:
Now for each requirement identify which protocol, source ip addresses, source wildcard (if applicable), destination ip addresses, destination wildcard (if applicable), and ports (if applicable) are involved

The model's response:
Breaking down each requirement into the involved parameters:

1. It must allow all FTP traffic.
   - Protocol: TCP
   - Source IP address: any
   - Source wildcard: any
   - Destination IP address: any
   - Destination wildcard: any
   - Ports: 20, 21 (FTP data and control ports)

2. It must only allow TCP traffic if the source port is within the range of 50000 to 51000.
   - Protocol: TCP
   - Source IP address: any
   - Source wildcard: any
   - Destination IP address: any
   - Destination wildcard: any
   - Source Ports: 50000-51000

3. It must allow all other traffic.
   - Protocol: any
   - Source IP address: any
   - Source wildcard: any
   - Destination IP address: any
   - Destination wildcard: any
   - Ports: any

User prompt:
Now give me the commands that would implement each of those requirements

The model's response:
```
permit tcp any any eq 20
permit tcp any any eq 21
permit tcp any any range 50000 51000
permit ip any any
```

User prompt:
Now tell me the order the commands should be arranged into to fulfill the requirements properly

The model's response:
The order of the commands should be:

1. permit tcp any any eq 20
2. permit tcp any any eq 21
3. permit tcp any any range 50000 51000
4. permit ip any any

This order makes sense because the more specific rules (allowing FTP traffic and the specific source port range for TCP) should be placed first, and the more general rule (allowing all other traffic) should be placed last.

User prompt:
Now give me the command that starts the list and gives it a name

The model's response:
```
ip access-list extended AllowFtpRangeTcp
```

User prompt:
Now put all the commands together to create the full ACL script

The model's response:
```
ip access-list extended AllowFtpRangeTcp
 permit tcp any any eq 20
 permit tcp any any eq 21
 permit tcp any any range 50000 51000
 permit ip any any
```

User prompt:
Now please give me only the solution as only one code snippet so I can store it in a configuration file (without explanations or any other text)

The model's response:
```
ip access-list extended AllowFtpRangeTcp
permit tcp any any eq 20
permit tcp any any eq 21
permit tcp any any range 50000 51000
permit ip any any
```

