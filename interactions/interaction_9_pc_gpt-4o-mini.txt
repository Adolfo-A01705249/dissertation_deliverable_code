System prompt:
You are a helpful, respectful and honest network configuration assistant.
You provide extended named access control list scripts in Cisco IOS syntax to fulfill the requirements you're given.
You always provide the script as it would be found in a configuration file.
Make sure to use the syntax for *extended* and *named* access control lists.
Make sure to not include any remarks, comments or explanations inside the script. 
Make sure to not include any console navigation commands.
Make sure to give the access control list a representative, brief, alphanumeric name with no punctuation.
When asked to give only the solution code wrap it around triple ticks (```) without specifying any languages.

User prompt:
Please help me figure out the script for an extended named ACL that allows traffic to server 172.27.8.55 only via web, blocks all tcp traffic to servers 172.27.8.53 and 172.27.8.54, and allows all other traffic. First help me break down the previous description into all the individual requirements this ACL needs to fulfill

The model's response:
1. Allow traffic to server 172.27.8.55 only via web (HTTP/HTTPS).
2. Block all TCP traffic to servers 172.27.8.53 and 172.27.8.54.
3. Allow all other traffic.

User prompt:
Now for each requirement identify which protocol, source ip addresses, source wildcard (if applicable), destination ip addresses, destination wildcard (if applicable), and ports (if applicable) are involved

The model's response:
1. **Allow traffic to server 172.27.8.55 only via web (HTTP/HTTPS)**:
   - Protocol: TCP
   - Source IP Addresses: Any (0.0.0.0)
   - Source Wildcard: 0.0.0.0
   - Destination IP Addresses: 172.27.8.55
   - Destination Wildcard: 0.0.0.0
   - Ports: 80 (HTTP), 443 (HTTPS)

2. **Block all TCP traffic to servers 172.27.8.53 and 172.27.8.54**:
   - Protocol: TCP
   - Source IP Addresses: Any (0.0.0.0)
   - Source Wildcard: 0.0.0.0
   - Destination IP Addresses: 172.27.8.53, 172.27.8.54
   - Destination Wildcard: 0.0.0.0
   - Ports: Any

3. **Allow all other traffic**:
   - Protocol: Any
   - Source IP Addresses: Any (0.0.0.0)
   - Source Wildcard: 0.0.0.0
   - Destination IP Addresses: Any (0.0.0.0)
   - Destination Wildcard: 0.0.0.0
   - Ports: Any

User prompt:
Now give me the commands that would implement each of those requirements

The model's response:
```
ip access-list extended NamedACL1
 permit tcp any host 172.27.8.55 eq 80
 permit tcp any host 172.27.8.55 eq 443
 deny tcp any host 172.27.8.53
 deny tcp any host 172.27.8.54
 permit ip any any
```

User prompt:
Now tell me the order the commands should be arranged into to fulfill the requirements properly

The model's response:
1. Permit TCP traffic to server 172.27.8.55 on port 80 (HTTP).
2. Permit TCP traffic to server 172.27.8.55 on port 443 (HTTPS).
3. Deny all TCP traffic to server 172.27.8.53.
4. Deny all TCP traffic to server 172.27.8.54.
5. Permit all other traffic.

User prompt:
Now give me the command that starts the list and gives it a name

The model's response:
```
ip access-list extended NamedACL1
```

User prompt:
Now put all the commands together to create the full ACL script

The model's response:
```
ip access-list extended NamedACL1
 permit tcp any host 172.27.8.55 eq 80
 permit tcp any host 172.27.8.55 eq 443
 deny tcp any host 172.27.8.53
 deny tcp any host 172.27.8.54
 permit ip any any
```

User prompt:
Now please give me only the solution as only one code snippet so I can store it in a configuration file (without explanations or any other text)

The model's response:
```
ip access-list extended NamedACL1
 permit tcp any host 172.27.8.55 eq 80
 permit tcp any host 172.27.8.55 eq 443
 deny tcp any host 172.27.8.53
 deny tcp any host 172.27.8.54
 permit ip any any
```

