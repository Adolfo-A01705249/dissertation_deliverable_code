System prompt:
You are a helpful, respectful and honest network configuration assistant.
You provide extended named access control list scripts in Cisco IOS syntax to fulfill the requirements you're given.
You always provide the script as it would be found in a configuration file.
Make sure to use the syntax for *extended* and *named* access control lists.
Make sure to not include any remarks, comments or explanations inside the script. 
Make sure to not include any console navigation commands.
Make sure to give the access control list a representative, brief, alphanumeric name with no punctuation.
When asked to give only the solution code wrap it around triple ticks (```) without specifying any languages.

User prompt:
Please help me figure out the script for an extended named ACL that permits all traffic from network 192.168.1.0/24 to network 192.168.2.0/24, and denies all other traffic. First help me break down the previous description into all the individual requirements this ACL needs to fulfill

The model's response:
1. Permit all traffic from the source network 192.168.1.0/24.
2. Permit all traffic to the destination network 192.168.2.0/24.
3. Deny all other traffic not matching the above criteria. 
4. Use a named access control list.
5. Use an extended access control list syntax.
6. Make the name of the ACL representative and brief, with no punctuation.

User prompt:
Now for each requirement identify which protocol, source ip addresses, source wildcard (if applicable), destination ip addresses, destination wildcard (if applicable), and ports (if applicable) are involved

The model's response:
1. Permit all traffic from the source network 192.168.1.0/24:
   - Protocol: Any
   - Source IP Address: 192.168.1.0
   - Source Wildcard: 0.0.0.255
   - Destination IP Address: Any
   - Destination Wildcard: 0.0.0.0
   - Ports: Any

2. Permit all traffic to the destination network 192.168.2.0/24:
   - Protocol: Any
   - Source IP Address: Any
   - Source Wildcard: 0.0.0.0
   - Destination IP Address: 192.168.2.0
   - Destination Wildcard: 0.0.0.255
   - Ports: Any

3. Deny all other traffic not matching the above criteria:
   - Protocol: Any
   - Source IP Address: Any
   - Source Wildcard: 0.0.0.0
   - Destination IP Address: Any
   - Destination Wildcard: 0.0.0.0
   - Ports: Any

User prompt:
Now give me the commands that would implement each of those requirements

The model's response:
```
ip access-list extended PermitDenyACL
 permit ip 192.168.1.0 0.0.0.255 any
 permit ip any 192.168.2.0 0.0.0.255
 deny ip any any
```

User prompt:
Now tell me the order the commands should be arranged into to fulfill the requirements properly

The model's response:
The commands should be arranged in the following order:

1. Permit all traffic from the source network 192.168.1.0/24.
2. Permit all traffic to the destination network 192.168.2.0/24.
3. Deny all other traffic not matching the above criteria.

User prompt:
Now give me the command that starts the list and gives it a name

The model's response:
```
ip access-list extended PermitDenyACL
```

User prompt:
Now put all the commands together to create the full ACL script

The model's response:
```
ip access-list extended PermitDenyACL
 permit ip 192.168.1.0 0.0.0.255 any
 permit ip any 192.168.2.0 0.0.0.255
 deny ip any any
```

User prompt:
Now please give me only the solution as only one code snippet so I can store it in a configuration file (without explanations or any other text)

The model's response:
```
ip access-list extended PermitDenyACL
 permit ip 192.168.1.0 0.0.0.255 any
 permit ip any 192.168.2.0 0.0.0.255
 deny ip any any
```

