System prompt:
You are a helpful, respectful and honest network configuration assistant.
You provide extended named access control list scripts in Cisco IOS syntax to fulfill the requirements you're given.
You always provide the script as it would be found in a configuration file.
Make sure to use the syntax for *extended* and *named* access control lists.
Make sure to not include any remarks, comments or explanations inside the script. 
Make sure to not include any console navigation commands.
Make sure to give the access control list a representative, brief, alphanumeric name with no punctuation.
When asked to give only the solution code wrap it around triple ticks (```) without specifying any languages.

User prompt:
Please help me figure out the script for an extended named ACL that blocks all traffic except for the telnet connection from host 10.25.40.1 to host 172.16.5.10. First help me break down the previous description into all the individual requirements this ACL needs to fulfill

The model's response:
Let's break down the requirements for the extended named ACL:

1. It's an extended ACL (not a standard ACL)
2. It's a named ACL (not a numbered ACL)
3. It needs to block all traffic
4. It needs to allow a Telnet connection
5. The Telnet connection is from a specific source host: 10.25.40.1
6. The Telnet connection is to a specific destination host: 172.16.5.10

Please let me know if you'd like to proceed with creating the ACL script based on these requirements.

User prompt:
Now for each requirement identify which protocol, source ip addresses, source wildcard (if applicable), destination ip addresses, destination wildcard (if applicable), and ports (if applicable) are involved

The model's response:
Here's the breakdown for each requirement:

1. It's an extended ACL:
   - No specific protocol, source/destination IP addresses, or ports involved

2. It's a named ACL:
   - No specific protocol, source/destination IP addresses, or ports involved

3. It needs to block all traffic:
   - Protocol: ip (protocol number 0)
   - Source IP Address: any (0.0.0.0)
   - Source Wildcard: any (255.255.255.255)
   - Destination IP Address: any (0.0.0.0)
   - Destination Wildcard: any (255.255.255.255)
   - No ports involved

4. It needs to allow a Telnet connection:
   - Protocol: tcp
   - Source IP Address: 10.25.40.1
   - Source Wildcard: host (0.0.0.0)
   - Destination IP Address: 172.16.5.10
   - Destination Wildcard: host (0.0.0.0)
   - Destination Port: telnet (23)

5. The Telnet connection is from a specific source host: 10.25.40.1
   - Already covered in requirement 4

6. The Telnet connection is to a specific destination host: 172.16.5.10
   - Already covered in requirement 4

User prompt:
Now give me the commands that would implement each of those requirements

The model's response:
```
ip access-list extended TelnetPermission
 deny ip any any
 permit tcp host 10.25.40.1 host 172.16.5.10 eq telnet
```

User prompt:
Now tell me the order the commands should be arranged into to fulfill the requirements properly

The model's response:
To fulfill the requirements properly, the "permit" statement should be placed above the "deny" statement. This is because the first match in an ACL determines the action taken, and we want to allow the Telnet connection from 10.25.40.1 to 172.16.5.10 before denying all other traffic. If the "deny" statement comes first, it would block all traffic, including the desired Telnet connection.

So, the correct order is:

```
ip access-list extended TelnetPermission
 permit tcp host 10.25.40.1 host 172.16.5.10 eq telnet
 deny ip any any
```

User prompt:
Now give me the command that starts the list and gives it a name

The model's response:
```
ip access-list extended TelnetOnly
```

User prompt:
Now put all the commands together to create the full ACL script

The model's response:
```
ip access-list extended TelnetOnly
 permit tcp host 10.25.40.1 host 172.16.5.10 eq telnet
 deny ip any any
```

User prompt:
Now please give me only the solution as only one code snippet so I can store it in a configuration file (without explanations or any other text)

The model's response:
```
ip access-list extended TelnetOnly
 permit tcp host 10.25.40.1 host 172.16.5.10 eq telnet
 deny ip any any
```

